#/bin/bash

#
## Note: the format of function description as below:
# fn_name: description
# and must unique


#
## git
#
git=$(which git)

#alias_gits: git status
alias_gits() {
	echo "git status"
	git status
}
#alias_gitstatus: git status
alias_gitstatus() {
	alias_gits
}

#alias_gitc: git commit -m
alias_gitc() {
	alias_gitcommit "$@"
}
#alias_gitcommit: git commit -m
alias_gitcommit() {
	echo "$git add --all && $git commit -m \"$@\""
	$git add --all
	$git commit -m "$@"
}

#alias_gitcheckout: git checkout
alias_gitcheckout() {
	echo "git checkout $@"
	git checkout "$@"
}

#alias_gitpush: git push origin HEAD
alias_gitpush() {
	echo "git push origin HEAD $@"
	git push origin HEAD "$@"
}

#alias_gitpull: git pull origin HEAD
alias_gitpull() {
	echo "git pull origin HEAD $@"
	git pull origin HEAD "$@"
}

#alias_gitlog: git log
alias_gitlog() {
	git log
}
#alias_gitlogf: git log --pretty
alias_gitlogf() {
	git log --pretty=format:"%C(magenta)%h%Creset -%C(red)%d%Creset %s %C(dim green)(%cr) [%an]" --abbrev-commit -30 $@
}




#alias_gitr: git remote -v
alias_gitr() {
	git remote -v $@
}

#alias_gitd: git diff
alias_gitd() {
	git diff $@
}

#alias_gitdel: git branch -D
alias_gitdel() {
	git branch -D $@  
} 

#alias_gitbr: git branch --format
alias_gitbr() {
	git branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate $@
}

#alias_gitundo: git reset HEAD~1
alias_gitundo() {
	git reset HEAD~1 --mixed $@
}

#alias_gitres: git reset --hard
alias_gitres() {
	git reset --hard $@
}
