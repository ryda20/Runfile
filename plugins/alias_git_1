#/bin/bash

#
## Note: the format of function description as below:
# fn_name: description
# and must unique

# one-line log
# l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

# a = add
# ap = add -p
# c = commit --verbose
# ca = commit -a --verbose
# cm = commit -m
# cam = commit -a -m
# m = commit --amend --verbose

# d = diff
# ds = diff --stat
# dc = diff --cached

# s = status -s
# co = checkout
# cob = checkout -b
# # list branches sorted by last modified
# b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

# # list aliases
# la = "!git config -l | grep alias | cut -c 7-"

#
## git
#

#alias_gst: git status
alias_gst() {
	alias_gitstatus
}
#alias_gits: git status
alias_gits() {
	alias_gitstatus
}
#alias_gitstatus: git status
alias_gitstatus() {
	echo "git status"
	git status
}

#alias_gco: git commit -m
alias_gco() {
	alias_gitcommit "$@"
}
#alias_gitc: git commit -m
alias_gitc() {
	alias_gitcommit "$@"
}
#alias_gitcommit: git commit -m
alias_gitcommit() {
	local message=${1:-""}
	echo "git add --all && git commit -m ${message}"
	git add --all
	git commit -m "${message}"
}


#alias_gch: git checkout
alias_gch() {
	alias_gitcheckout "$@"
}
#alias_gitcheckout: git checkout
alias_gitcheckout() {
	echo "git checkout $@"
	git checkout "$@"
}

#alias_gps: push origin HEAD
alias_gps() {
	alias_gitpush "$@"
}
#alias_gitpush: push origin HEAD
alias_gitpush() {
	echo "git push origin HEAD $@"
	git push origin HEAD "$@"
}

#alias_gpl: pull origin HEAD
alias_gpl() {
	echo "git pull origin HEAD $@"
	git pull origin HEAD "$@"
}
#alias_gitpull: pull origin HEAD
alias_gitpull() {
	echo "git pull origin HEAD $@"
	git pull origin HEAD "$@"
}

#alias_gl: git log
alias_gl() {
	alias_gitlog "$@"
}
#alias_gitlog: git log
alias_gitlog() {
	git log "$@"
}
#alias_glf: git log --pretty
alias_glf() {
	alias_gitlogf "$@"
}
#alias_gitlogf: git log --pretty
alias_gitlogf() {
	git log --pretty=format:"%C(magenta)%h%Creset -%C(red)%d%Creset %s %C(dim green)(%cr) [%an]" --abbrev-commit -30 "$@"
}




#alias_gitr: git remote -v
alias_gitr() {
	git remote -v $@
}

#alias_gitd: git diff
alias_gitd() {
	git diff $@
}

#alias_gitdel: git branch -D
alias_gitdel() {
	git branch -D $@  
} 

#alias_gitbr: git branch --format
alias_gitbr() {
	git branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate $@
}

#alias_gitundo: git reset HEAD~1
alias_gitundo() {
	git reset HEAD~1 --mixed $@
}

#alias_gitres: git reset --hard
alias_gitres() {
	git reset --hard $@
}
